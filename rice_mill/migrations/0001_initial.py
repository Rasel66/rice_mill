# Generated by Django 5.1.7 on 2025-03-29 09:33

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_name', models.CharField(max_length=255)),
                ('customer_name_bn', models.CharField(max_length=255)),
                ('phone', models.CharField(max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=200, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ItemTypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_type_name', models.CharField(max_length=250)),
                ('item_type_id', models.IntegerField()),
                ('item_type_name_bn', models.CharField(blank=True, max_length=250, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=200, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Uom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uom_name', models.CharField(max_length=250)),
                ('uom_name_bn', models.CharField(blank=True, max_length=250, null=True)),
                ('relative_factor', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='branch_name', to='rice_mill.branch')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Items',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_name', models.CharField(max_length=250)),
                ('item_name_bn', models.CharField(blank=True, max_length=250, null=True)),
                ('item_description', models.TextField(blank=True, null=True)),
                ('sequence_no', models.FloatField()),
                ('charge', models.FloatField()),
                ('remarks', models.CharField(blank=True, max_length=250, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=250, null=True)),
                ('item_types', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='items_itemtypes', to='rice_mill.itemtypes')),
                ('uom', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='items_uom', to='rice_mill.uom')),
            ],
        ),
        migrations.CreateModel(
            name='PartyInvoices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.FloatField()),
                ('unit_price', models.FloatField()),
                ('total_price', models.FloatField(blank=True, null=True)),
                ('charges', models.FloatField(blank=True, null=True)),
                ('prev_balance', models.FloatField(blank=True, null=True)),
                ('cash_pay', models.FloatField(blank=True, null=True)),
                ('grand_total_balance', models.FloatField(blank=True, null=True)),
                ('current_due', models.FloatField(blank=True, null=True)),
                ('remarks', models.CharField(blank=True, max_length=250, null=True)),
                ('base_unit_qty', models.FloatField(blank=True, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='party_invoice_customer', to='rice_mill.customer')),
                ('items', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='party_invoice_items', to='rice_mill.items')),
                ('uom', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='party_invoice_uom', to='rice_mill.uom')),
            ],
        ),
        migrations.CreateModel(
            name='PartyInvoiceChild',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_price', models.FloatField()),
                ('qty', models.FloatField()),
                ('charges', models.FloatField(blank=True, null=True)),
                ('items', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='party_invoice_chaild_items', to='rice_mill.itemtypes')),
                ('party_invoice', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='party_invoice_child_party_invoice', to='rice_mill.partyinvoices')),
                ('uom', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='party_invoice_chaild_uom', to='rice_mill.uom')),
            ],
        ),
        migrations.CreateModel(
            name='AddItemsDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('dhan_qty', models.FloatField()),
                ('dhan_unit_price', models.FloatField()),
                ('dhan_total', models.FloatField(blank=True, null=True)),
                ('chaul_qty', models.FloatField(blank=True, null=True)),
                ('chaul_unit_price', models.FloatField(blank=True, null=True)),
                ('chaul_total', models.FloatField(blank=True, null=True)),
                ('khud_qty', models.FloatField(blank=True, null=True)),
                ('khud_unit_price', models.FloatField(blank=True, null=True)),
                ('khud_total', models.FloatField(blank=True, null=True)),
                ('kura_qty', models.FloatField(blank=True, null=True)),
                ('kura_unit_price', models.FloatField(blank=True, null=True)),
                ('kura_total', models.FloatField(blank=True, null=True)),
                ('chita_qty', models.FloatField(blank=True, null=True)),
                ('chita_unit_price', models.FloatField(blank=True, null=True)),
                ('chita_total', models.FloatField(blank=True, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='addItemDetails_customer', to='rice_mill.customer')),
                ('items', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='additems_items', to='rice_mill.itemtypes')),
                ('chaul_uom', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='additems_uom_chaul', to='rice_mill.uom')),
                ('chita_uom', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='additems_uom_chita', to='rice_mill.uom')),
                ('dhan_uom', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='additems_uom_dhan', to='rice_mill.uom')),
                ('khud_uom', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='additems_uom_khud', to='rice_mill.uom')),
                ('kura_uom', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='additems_uom_kura', to='rice_mill.uom')),
            ],
        ),
    ]
